name: Deploy

on:
  push:
    branches:
      - main
      - dev_38

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: clone code
        uses: actions/checkout@v2
      - name: docker build
        run: docker build -t lenzikeva/skypro_eportnova:$GITHUB_REF_NAME-$GITHUB_RUN_ID .
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: docker push
        run: docker push lenzikeva/skypro_eportnova:$GITHUB_REF_NAME-$GITHUB_RUN_ID

#jobs:
#  build:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - uses: docker/setup-buildx-action@v2
#      - uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - uses: docker/build-push-action@v4
#        with:
#          push: true
#          file: Dockerfile.prod
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/todolist:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Copy on server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          source: "deploy/*"
          target: "diploma_12"
          strip_components: 1
      - name: Run compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |
            cd diploma_12
            docker-compose pull
            docker-compose up -d
      - name: Cleanup after deploy
        if: always()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: |

            docker system prune -a -f